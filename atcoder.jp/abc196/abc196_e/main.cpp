#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL
#include "/debug.h"
#else
#define db(...)
#endif

#define all(v) v.begin(), v.end()
#define pb push_back
using ll = int64_t;
const int NAX = 2e5 + 5, MOD = 1000000007;

vector<int64_t> solveCase(int N, const vector<int64_t> &a, const vector<int64_t> &t, int Q, vector<int64_t> &x)
{
    ll low = -1e15, high = 1e15, add = 0;
    for (size_t i = 0; i < N; i++)
    {
        if (t[i] == 1)
        {
            low += a[i];
            high += a[i];
            add += a[i];
        }
        else if (t[i] == 2)
        {
            if (a[i] <= low)
                ;
            else if (a[i] <= high)
                low = a[i];
            else
            {
                add = 0;
                low = high = a[i];
            }
        }
        else
        {
            if (high <= a[i])
                ;
            else if (low <= a[i])
                high = a[i];
            else
            {
                add = 0;
                low = high = a[i];
            }
        }
        db(i, t[i], a[i], low, high, add);
    }
    for (auto &y : x)
    {
        y += add;
        db(y);
        if (y < low)
            y = low;
        else if (y > high)
            y = high;
        db(y);
    }
    return x;
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main()
{
#ifndef LOCAL
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif
    constexpr char endl = '\n';
    int N, Q;
    cin >> N;
    vector<int64_t> a(N), t(N);
    for (int i = 0; i < N; ++i)
    {
        cin >> a[i] >> t[i];
    }
    cin >> Q;
    vector<int64_t> x(Q);
    for (int i = 0; i < Q; ++i)
    {
        cin >> x[i];
    }
    auto ans = solveCase(N, a, t, Q, x);
    for (int i = 0; i < Q; ++i)
    {
        cout << ans[i] << endl;
    }
    return 0;
}