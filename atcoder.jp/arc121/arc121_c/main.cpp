#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL
#include "/debug.h"
#else
#define db(...)
#endif

#define all(v) v.begin(), v.end()
#define pb push_back
using ll = long long;
const int NAX = 2e5 + 5, MOD = 1000000007;

vector<int> solveCase(int n, vector<int64_t> &a)
{
    // TODO: edit here
    db(n, a);
    vector<int> res;
    int idx = 1;
    for (size_t i = n; i >= 1;)
    {
        if (a[i] == i)
        {
            --i;
            continue;
        }
        int id = -1;
        for (int j = 1; j + 1 <= i; j++)
        {
            if ((j & 1) == (idx & 1))
                if ((a[j] == i))
                {
                    id = j;
                    break;
                }
        }
        db(i, id);
        if (id == -1)
        {
            for (int j = 1; j + 1 <= i; j++)
                if ((j & 1) == (idx & 1))
                {
                    id = j;
                    break;
                }
            if (id == -1)
            {
                cout << "WA\n";
                exit(0);
                assert(id != -1);
            }
        }
        swap(a[id], a[id + 1]);
        res.pb(id);
        db(idx, id, a);
        idx = (idx + 1) % 2;
    }
    db(a);
    db(res);
    return res;
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main()
{
#ifndef LOCAL
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif
    constexpr char endl = '\n';
    // failed to analyze input format
    // TODO: edit here
    int t;
    cin >> t;
    for (size_t i = 0; i < t; i++)
    {
        int n;
        cin >> n;
        vector<int64_t> a(n + 1);
        for (int i = 1; i <= n; ++i)
        {
            cin >> a[i];
        }
        auto ans = solveCase(n, a);
        int M = ans.size();
        cout << M << endl;
        for (int i = 0; i < M; ++i)
        {
            cout << ans[i] << ' ';
        }
        cout << endl;
    }

    return 0;
}