#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL
#include "/debug.h"
#else
#define db(...)
#endif

#define all(v) v.begin(), v.end()
#define pb push_back
using ll = long long;
const int NAX = 5000 + 5;

constexpr int64_t MOD = 998244353;
int pw[NAX][NAX];

int add(int a, int b)
{
    a += b;
    if (a >= MOD)
        a -= MOD;
    return a;
}

int mul(int a, int b)
{
    return (a * 1LL * b) % MOD;
}

int64_t solveCase(int64_t N, int64_t M)
{
    for (size_t i = 0; i < NAX; i++)
    {
        pw[i][0] = 1;
        for (size_t j = 1; j < NAX; j++)
            pw[i][j] = (i * 1LL * pw[i][j - 1]) % MOD;
    }
    int64_t res = 0;
    for (size_t i = 0; i < N; i++)
        for (size_t x = 1; x <= M; x++)
            res = add(res, mul(pw[M - x][i], pw[M][N - 1 - i]));
    for (size_t d = 1; d < N; d++)
        for (size_t x = 1; x <= M; x++)
            res = add(res, mul(mul(N - d, x - 1), mul(pw[M - x][d - 1], pw[M][N - 1 - d])));
    return res;
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main()
{
#ifndef LOCAL
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif
    constexpr char endl = '\n';
    int64_t N, M;
    cin >> N >> M;
    auto ans = solveCase(N, M);
    cout << ans << endl;
    return 0;
}