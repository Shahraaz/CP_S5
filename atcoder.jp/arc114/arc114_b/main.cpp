#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL
#include "/debug.h"
#else
#define db(...)
#endif

#define all(v) v.begin(), v.end()
#define pb push_back
using ll = long long;
// const int NAX = 2e5 + 5, MOD = 1000000007;

constexpr int64_t MOD = 998244353;
int64_t solveCase(int N, const vector<int64_t> &f)
{
    // TODO: edit here
    int64_t res = 0;
    vector<int64_t> cycle_end(N, -1), incycle(N, 0);
    vector<int> sizes;
    for (size_t i = 0; i < N; i++)
    {
        if (cycle_end[i] != -1)
            continue;
        queue<int> Q;
        vector<int> nodes;
        Q.push(i);
        cycle_end[i] = N;
        bool ok = true;
        while (Q.size())
        {
            auto top = Q.front();
            ok = ok && !incycle[top];
            Q.pop();
            nodes.pb(top);
            auto next = f[top];
            db(top, next, cycle_end[next]);
            if (cycle_end[next] != -1)
            {
                ok = ok && !incycle[next];
                break;
            }
            cycle_end[next] = top;
            Q.push(next);
        }
        db(ok, nodes);
        for (auto &x : nodes)
        {
            db(x, incycle[x]);
            incycle[x] = 1;
        }
        db(ok);
        if (ok)
            sizes.pb(1);
    }
    db(sizes);
    if (sizes.empty())
        res = 0;
    else
    {
        res = 1;
        for (auto &x : sizes)
        {
            res = (res * 2) % MOD;
        }
        res = (res - 1 + MOD) % MOD;
    }
    return res;
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main()
{
#ifndef LOCAL
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif
    constexpr char endl = '\n';
    int N;
    cin >> N;
    vector<int64_t> f(N);
    for (int i = 0; i < N; ++i)
    {
        cin >> f[i];
        --f[i];
    }
    auto ans = solveCase(N, f);
    cout << ans << endl;
    return 0;
}