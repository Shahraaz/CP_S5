#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL
#include "/debug.h"
#else
#define db(...)
#endif

#define all(v) v.begin(), v.end()
#define pb push_back
using ll = long long;
const int NAX = 2e5 + 5, MOD = 1000000007;

int64_t solveCase(int64_t N, int64_t M, const vector<int64_t> &A, const vector<int64_t> &B)
{
    // TODO: edit here
    int64_t ret = 0;
    vector<vector<int>> adj(N);
    for (size_t i = 0; i < M; i++)
        adj[A[i] - 1].pb(B[i] - 1);

    for (size_t i = 0; i < N; i++)
    {
        vector<int> vis(N);
        vis[i] = 1;
        queue<int> Q;
        Q.push(i);
        while (Q.size())
        {
            auto top = Q.front();
            Q.pop();
            for (auto &x : adj[top])
            {
                if (vis[x])
                    continue;
                vis[x] = 1;
                Q.push(x);
            }
        }
        ret += count(all(vis), 1);
    }
    return ret;
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main()
{
#ifndef LOCAL
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif
    constexpr char endl = '\n';
    int64_t N, M;
    cin >> N >> M;
    vector<int64_t> A(M), B(M);
    for (int i = 0; i < M; ++i)
    {
        cin >> A[i] >> B[i];
    }
    auto ans = solveCase(N, M, A, B);
    cout << ans << endl;
    return 0;
}