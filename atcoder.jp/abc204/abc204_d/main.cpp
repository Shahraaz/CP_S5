#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL
#include "/debug.h"
#else
#define db(...)
#endif

#define all(v) v.begin(), v.end()
#define pb push_back
using ll = long long;
const int NAX = 1e5 + 5, MOD = 1000000007;

int64_t solveCase(int N, const vector<int64_t> &T)
{
    // TODO: edit here
    vector<int> possible(NAX);
    possible[0] = 1;
    for (size_t i = 0; i < N; i++)
    {
        for (int j = possible.size() - 1; j >= 0; j--)
            if (possible[j] && j + T[i] < possible.size())
                possible[j + T[i]] = 1;
    }
    int64_t res = LLONG_MAX, sum = accumulate(all(T), (int64_t)0);
    for (int i = 0; i < possible.size(); i++)
        if (possible[i])
        {
            int other = sum - i;
            res = min(res, (int64_t)max(i, other));
        }
    return res;
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main()
{
#ifndef LOCAL
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif
    constexpr char endl = '\n';
    int N;
    cin >> N;
    vector<int64_t> T(N);
    for (int i = 0; i < N; ++i)
    {
        cin >> T[i];
    }
    auto ans = solveCase(N, T);
    cout << ans << endl;
    return 0;
}