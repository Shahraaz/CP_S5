#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL
#include "/debug.h"
#else
#define db(...)
#endif

#define all(v) v.begin(), v.end()
#define pb push_back
using ll = long long;
const int NAX = 2e5 + 5, MOD = 1000000007;
vector<int> primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71};
int dp[80][1 << 21];

int64_t solveCase(int64_t A, int64_t B)
{
    // TODO: edit here
    memset(dp, -1, sizeof dp);
    function<ll(ll, int)> solve = [&](ll curr, int mask) -> ll {
        if (curr == B + 1)
            return 1;
        auto &ret = dp[curr - A][mask];
        if (ret >= 0)
            return ret;
        ret = solve(curr + 1, mask);
        bool ok = true;
        int nmask = mask;
        for (size_t i = 0; i < primes.size(); i++)
            if (curr % primes[i] == 0)
            {
                if ((mask >> i) & 1)
                    ok = false;
                else
                    nmask |= 1 << i;
            }
        if (ok)
            ret += solve(curr + 1, nmask);
        db(ret, curr, bitset<21>(mask));
        return ret;
    };
    return solve(A, 0);
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main()
{
#ifndef LOCAL
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif
    constexpr char endl = '\n';
    int64_t A, B;
    cin >> A >> B;
    auto ans = solveCase(A, B);
    cout << ans << endl;
    return 0;
}